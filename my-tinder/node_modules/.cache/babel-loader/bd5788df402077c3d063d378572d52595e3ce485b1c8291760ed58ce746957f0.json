{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joona\\\\Desktop\\\\Advanced_project\\\\my-tinder\\\\src\\\\pages\\\\Mainpage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport UserCard from '../components/UserCard';\nimport Menu from '../components/Menu';\nimport { useNavigate } from 'react-router-dom';\nimport './MainPage.css';\nimport { useSwipeable } from 'react-swipeable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MainPage = ({\n  jwtToken,\n  user,\n  setUser,\n  setJwtToken\n}) => {\n  _s();\n  const [users, setUsers] = useState([]); // Fetch and set user data\n  const [currentUser, setCurrentUser] = useState(null); // Fetch and set current user data\n  const [showPopup, setShowPopup] = useState(false); // State to toggle popup visibility\n  const navigate = useNavigate();\n\n  // Fetch users and current user data on component mount\n  useEffect(() => {\n    // Check if jwtToken exists, if not redirect to login page\n    if (!jwtToken) {\n      navigate('/login');\n      return;\n    }\n\n    // Fetch user data based on username\n    const fetchUserData = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/users?username=${user.username}`, {\n          headers: {\n            Authorization: `Bearer ${jwtToken}`\n          }\n        });\n        if (response.ok) {\n          const userData = await response.json();\n          setUser(userData);\n        } else {\n          console.error('Failed to fetch user data');\n        }\n      } catch (error) {\n        console.error('Error fetching user data:', error);\n      }\n    };\n    fetchUserData();\n  }, [jwtToken, user.username, navigate]);\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/users/all?username=${user.username}`, {\n          headers: {\n            Authorization: `Bearer ${jwtToken}`\n          }\n        });\n        if (response.ok) {\n          const data = await response.json();\n          setUsers(data);\n          setCurrentUser(data[0]);\n        } else {\n          console.error('Error fetching users:', response.statusText);\n        }\n      } catch (error) {\n        console.error('Error fetching users:', error);\n      }\n    };\n    fetchUsers();\n  }, [jwtToken, user.username]);\n  const handlers = useSwipeable({\n    onSwipedLeft: () => {\n      const nextUser = users[users.indexOf(currentUser) + 1];\n      if (nextUser) {\n        setCurrentUser(nextUser);\n      } else {\n        navigate('/');\n      }\n    },\n    onSwipedRight: () => {\n      const nextUser = users[users.indexOf(currentUser) + 1];\n      if (nextUser) {\n        setCurrentUser(nextUser);\n      } else {\n        navigate('/');\n      }\n    }\n  });\n\n  // Function to handle like/dislike actions\n  const handleLikeDislike = (userId, action) => {\n    // Implement like/dislike logic here\n  };\n\n  // Function to handle username click and toggle popup visibility\n  const handleUsernameClick = () => {\n    setShowPopup(!showPopup);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      onClick: handleUsernameClick,\n      children: user.username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), showPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup show\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: user.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Bio: \", user.bio]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Register date: \", user.registerDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUsernameClick,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ...handlers,\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '100vh'\n      },\n      children: currentUser && /*#__PURE__*/_jsxDEV(UserCard, {\n        user: currentUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {\n      setJwtToken: setJwtToken\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(MainPage, \"1Y807/K5jcIhgSLNyJEm4JSv8h0=\", false, function () {\n  return [useNavigate, useSwipeable];\n});\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useState","useEffect","UserCard","Menu","useNavigate","useSwipeable","jsxDEV","_jsxDEV","Fragment","_Fragment","MainPage","jwtToken","user","setUser","setJwtToken","_s","users","setUsers","currentUser","setCurrentUser","showPopup","setShowPopup","navigate","fetchUserData","response","fetch","username","headers","Authorization","ok","userData","json","console","error","fetchUsers","data","statusText","handlers","onSwipedLeft","nextUser","indexOf","onSwipedRight","handleLikeDislike","userId","action","handleUsernameClick","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","className","name","bio","registerDate","style","display","justifyContent","alignItems","height","_c","$RefreshReg$"],"sources":["C:/Users/joona/Desktop/Advanced_project/my-tinder/src/pages/Mainpage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport UserCard from '../components/UserCard';\r\nimport Menu from '../components/Menu';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './MainPage.css'\r\nimport { useSwipeable } from 'react-swipeable';\r\n\r\nconst MainPage = ({ jwtToken, user, setUser, setJwtToken }) => {\r\n  const [users, setUsers] = useState([]); // Fetch and set user data\r\n  const [currentUser, setCurrentUser] = useState(null); // Fetch and set current user data\r\n  const [showPopup, setShowPopup] = useState(false); // State to toggle popup visibility\r\n  const navigate = useNavigate();\r\n\r\n  // Fetch users and current user data on component mount\r\n  useEffect(() => {\r\n    // Check if jwtToken exists, if not redirect to login page\r\n    if (!jwtToken) {\r\n      navigate('/login');\r\n      return;\r\n    }\r\n\r\n    // Fetch user data based on username\r\n    const fetchUserData = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:5000/users?username=${user.username}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${jwtToken}`,\r\n          },\r\n        });\r\n        if (response.ok) {\r\n          const userData = await response.json();\r\n          setUser(userData)\r\n        } else {\r\n          console.error('Failed to fetch user data');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching user data:', error);\r\n      }\r\n    };\r\n\r\n    fetchUserData();\r\n  }, [jwtToken, user.username, navigate]);\r\n\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:5000/users/all?username=${user.username}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${jwtToken}`,\r\n          },\r\n        });\r\n\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setUsers(data);\r\n          setCurrentUser(data[0]);\r\n        } else {\r\n          console.error('Error fetching users:', response.statusText);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching users:', error);\r\n      }\r\n    };\r\n\r\n    fetchUsers();\r\n  }, [jwtToken, user.username]);\r\n\r\n  const handlers = useSwipeable({\r\n    onSwipedLeft: () => {\r\n      const nextUser = users[users.indexOf(currentUser) + 1];\r\n      if (nextUser) {\r\n        setCurrentUser(nextUser);\r\n      } else {\r\n        navigate('/');\r\n      }\r\n    },\r\n    onSwipedRight: () => {\r\n      const nextUser = users[users.indexOf(currentUser) + 1];\r\n      if (nextUser) {\r\n        setCurrentUser(nextUser);\r\n      } else {\r\n        navigate('/');\r\n      }\r\n    },\r\n  });\r\n\r\n  // Function to handle like/dislike actions\r\n  const handleLikeDislike = (userId, action) => {\r\n    // Implement like/dislike logic here\r\n  };\r\n\r\n  // Function to handle username click and toggle popup visibility\r\n  const handleUsernameClick = () => {\r\n    setShowPopup(!showPopup);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1 onClick={handleUsernameClick}>{user.username}</h1>\r\n      {showPopup && (\r\n        <div className=\"popup show\">\r\n          <h2>{user.name}</h2>\r\n          <p>Bio: {user.bio}</p>\r\n          <p>Register date: {user.registerDate}</p>\r\n          <button onClick={handleUsernameClick}>Close</button>\r\n        </div>\r\n      )}\r\n      <div {...handlers} style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100vh' }}>\r\n        {currentUser && <UserCard user={currentUser} />}\r\n      </div>\r\n      <Menu setJwtToken={ setJwtToken }/>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}