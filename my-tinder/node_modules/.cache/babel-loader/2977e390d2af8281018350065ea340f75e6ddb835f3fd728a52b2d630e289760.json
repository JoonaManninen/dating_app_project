{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joona\\\\Desktop\\\\Advanced_project\\\\my-tinder\\\\src\\\\components\\\\Chat.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = ({\n  selectedChat,\n  jwtToken,\n  user\n}) => {\n  _s();\n  const [chat, setChat] = useState([]);\n  const [message, setMessage] = useState('');\n  const chatContainerRef = useRef(null);\n  const inputRef = useRef(null);\n  useEffect(() => {\n    fetchMessages();\n  }, [selectedChat, jwtToken]);\n  const fetchMessages = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/messages/chat/?id=${selectedChat}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${jwtToken}`\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Failed to fetch messages');\n      }\n      const data = await response.json();\n      setChat(data);\n      // Scroll to bottom of chat container\n      chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\n    } catch (error) {\n      console.error('Error fetching messages:', error);\n    }\n  };\n  const sendMessage = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch(`http://localhost:5000/messages/send/?id=${selectedChat}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${jwtToken}`\n        },\n        body: JSON.stringify({\n          text: message,\n          username: user.username\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to send message');\n      }\n      const data = await response.json();\n      console.log(data);\n      setMessage('');\n      fetchMessages();\n      inputRef.current.focus(); // Focus on input after sending message\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: chat.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [message.senderId, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this), \" \", message.content]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendMessage,\n      className: \"message-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: inputRef,\n        type: \"text\",\n        value: message,\n        onChange: e => setMessage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n_s(Chat, \"u/VXpg4OkwAzTDbgi025xjITxcw=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Chat","selectedChat","jwtToken","user","_s","chat","setChat","message","setMessage","chatContainerRef","inputRef","fetchMessages","response","fetch","method","headers","ok","Error","data","json","current","scrollTop","scrollHeight","error","console","sendMessage","e","preventDefault","body","JSON","stringify","text","username","log","focus","children","className","map","index","senderId","fileName","_jsxFileName","lineNumber","columnNumber","content","onSubmit","ref","type","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/joona/Desktop/Advanced_project/my-tinder/src/components/Chat.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\n\r\nconst Chat = ({ selectedChat, jwtToken, user }) => {\r\n    const [chat, setChat] = useState([]);\r\n    const [message, setMessage] = useState('');\r\n    const chatContainerRef = useRef(null);\r\n    const inputRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        fetchMessages();\r\n    }, [selectedChat, jwtToken]);\r\n\r\n    const fetchMessages = async () => {\r\n        try {\r\n            const response = await fetch(`http://localhost:5000/messages/chat/?id=${selectedChat}`, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${jwtToken}`,\r\n                },\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Failed to fetch messages');\r\n            }\r\n\r\n            const data = await response.json();\r\n            setChat(data);\r\n            // Scroll to bottom of chat container\r\n            chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\r\n        } catch (error) {\r\n            console.error('Error fetching messages:', error);\r\n        }\r\n    };\r\n\r\n    const sendMessage = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            const response = await fetch(`http://localhost:5000/messages/send/?id=${selectedChat}`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${jwtToken}`,\r\n                },\r\n                body: JSON.stringify({ text: message, username: user.username }),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Failed to send message');\r\n            }\r\n            const data = await response.json();\r\n            console.log(data);\r\n            setMessage('');\r\n            fetchMessages();\r\n            inputRef.current.focus(); // Focus on input after sending message\r\n        } catch (error) {\r\n            console.error('Error sending message:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"chat-container\">\r\n                {chat.map((message, index) => (\r\n                    <div key={index}>\r\n                        <strong>{message.senderId}:</strong> {message.content}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <form onSubmit={sendMessage} className=\"message-form\">\r\n                <input\r\n                    ref={inputRef}\r\n                    type=\"text\"\r\n                    value={message}\r\n                    onChange={(e) => setMessage(e.target.value)}\r\n                />\r\n                <button type=\"submit\">Send</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}