{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joona\\\\Desktop\\\\Advanced_project\\\\my-tinder\\\\src\\\\components\\\\ChatList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ListGroup, ListGroupItem } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatList = ({\n  messages,\n  jwtToken,\n  setSelectedChat,\n  username\n}) => {\n  _s();\n  const [currentPage, setCurrentPage] = useState(1);\n  const chatsPerPage = 10;\n  useEffect(() => {\n    setCurrentPage(1); // Reset current page when messages change\n  }, [messages]);\n\n  // Calculate total pages\n  const totalPages = Math.ceil(messages.length / chatsPerPage);\n\n  // Calculate index range for current page\n  const indexOfLastChat = currentPage * chatsPerPage;\n  const indexOfFirstChat = indexOfLastChat - chatsPerPage;\n  const currentChats = messages.slice(indexOfFirstChat, indexOfLastChat);\n\n  // Function to handle chat item click\n  const handleChatClick = id => {\n    setSelectedChat(id);\n  };\n\n  // Function to handle page change\n  const handlePageChange = page => {\n    setCurrentPage(page);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ListGroup, {\n      children: currentChats.map(message => /*#__PURE__*/_jsxDEV(ListGroupItem, {\n        onClick: () => handleChatClick(message._id),\n        children: [console.log(message), message.matchUsername === username ? username : message.username]\n      }, message._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), totalPages > 1 && /*#__PURE__*/_jsxDEV(\"nav\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"pagination\",\n        children: Array.from({\n          length: totalPages\n        }, (_, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `page-item ${currentPage === index + 1 ? 'active' : ''}`,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"page-link\",\n            onClick: () => handlePageChange(index + 1),\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this)\n        }, index + 1, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(ChatList, \"GDYsIxij9y/ZFL42bMqqthZmeP4=\");\n_c = ChatList;\nexport default ChatList;\nvar _c;\n$RefreshReg$(_c, \"ChatList\");","map":{"version":3,"names":["React","useState","useEffect","ListGroup","ListGroupItem","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatList","messages","jwtToken","setSelectedChat","username","_s","currentPage","setCurrentPage","chatsPerPage","totalPages","Math","ceil","length","indexOfLastChat","indexOfFirstChat","currentChats","slice","handleChatClick","id","handlePageChange","page","children","map","message","onClick","_id","console","log","matchUsername","fileName","_jsxFileName","lineNumber","columnNumber","className","Array","from","_","index","_c","$RefreshReg$"],"sources":["C:/Users/joona/Desktop/Advanced_project/my-tinder/src/components/ChatList.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { ListGroup, ListGroupItem } from 'react-bootstrap';\r\n\r\nconst ChatList = ({ messages, jwtToken, setSelectedChat, username }) => {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const chatsPerPage = 10;\r\n\r\n  useEffect(() => {\r\n    setCurrentPage(1); // Reset current page when messages change\r\n  }, [messages]);\r\n\r\n  // Calculate total pages\r\n  const totalPages = Math.ceil(messages.length / chatsPerPage);\r\n\r\n  // Calculate index range for current page\r\n  const indexOfLastChat = currentPage * chatsPerPage;\r\n  const indexOfFirstChat = indexOfLastChat - chatsPerPage;\r\n  const currentChats = messages.slice(indexOfFirstChat, indexOfLastChat);\r\n\r\n  // Function to handle chat item click\r\n  const handleChatClick = (id) => {\r\n    setSelectedChat(id);\r\n  };\r\n\r\n  // Function to handle page change\r\n  const handlePageChange = (page) => {\r\n    setCurrentPage(page);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ListGroup>\r\n        {currentChats.map((message) => (\r\n          <ListGroupItem key={message._id} onClick={() => handleChatClick(message._id)}>\r\n            {console.log(message)}\r\n            {message.matchUsername === username ? username : message.username}\r\n          </ListGroupItem>\r\n        ))}\r\n      </ListGroup>\r\n      {totalPages > 1 && (\r\n        <nav>\r\n          <ul className=\"pagination\">\r\n            {Array.from({ length: totalPages }, (_, index) => (\r\n              <li key={index + 1} className={`page-item ${currentPage === index + 1 ? 'active' : ''}`}>\r\n                <button className=\"page-link\" onClick={() => handlePageChange(index + 1)}>\r\n                  {index + 1}\r\n                </button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </nav>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChatList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}