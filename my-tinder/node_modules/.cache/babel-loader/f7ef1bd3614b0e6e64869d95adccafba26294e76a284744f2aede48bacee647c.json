{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joona\\\\Desktop\\\\Advanced_project\\\\my-tinder\\\\src\\\\components\\\\Chat.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = ({\n  selectedChat,\n  jwtToken,\n  user\n}) => {\n  _s();\n  const [chat, setChat] = useState([]);\n  useEffect(() => {\n    const fetchMessages = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/messages/chat/?id=${selectedChat}`, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${jwtToken}`\n          }\n        });\n        if (!response.ok) {\n          throw new Error('Failed to fetch messages');\n        }\n        const data = await response.json();\n        console.log(data, \"kek\");\n        setChat(data);\n      } catch (error) {\n        console.error('Error fetching messages:', error);\n      }\n    };\n    fetchMessages();\n  }, [selectedChat, jwtToken]);\n  const sendMessage = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch(`http://localhost:5000/messages/send?id=${selectedChat}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${jwtToken}`\n        },\n        body: JSON.stringify({\n          text: message,\n          username: user.username\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to send message');\n      }\n      setMessage('');\n      fetchMessages();\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: chat.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [message.username, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), \" \", message.text]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 19\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendMessage,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: message,\n        onChange: e => setMessage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 13\n  }, this);\n};\n_s(Chat, \"dldYjcUEWs/7UwnfdUK9EPeZ62E=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Chat","selectedChat","jwtToken","user","_s","chat","setChat","fetchMessages","response","fetch","method","headers","ok","Error","data","json","console","log","error","sendMessage","e","preventDefault","body","JSON","stringify","text","message","username","setMessage","children","map","index","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/joona/Desktop/Advanced_project/my-tinder/src/components/Chat.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst Chat = ({ selectedChat, jwtToken, user }) => {\r\n    const [chat, setChat] = useState([]);\r\n    \r\n    useEffect(() => {\r\n        const fetchMessages = async () => {\r\n          try {\r\n            const response = await fetch(`http://localhost:5000/messages/chat/?id=${selectedChat}`, {\r\n              method: 'GET',\r\n              headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${jwtToken}`,\r\n              },\r\n            });\r\n    \r\n            if (!response.ok) {\r\n              throw new Error('Failed to fetch messages');\r\n            }\r\n    \r\n            const data = await response.json();\r\n            console.log(data, \"kek\");\r\n            setChat(data);\r\n          } catch (error) {\r\n            console.error('Error fetching messages:', error);\r\n          }\r\n        };\r\n        fetchMessages();\r\n        }, [selectedChat, jwtToken]);\r\n\r\n        const sendMessage = async (e) => {\r\n            e.preventDefault();\r\n        \r\n            try {\r\n              const response = await fetch(`http://localhost:5000/messages/send?id=${selectedChat}`, {\r\n                method: 'POST',\r\n                headers: {\r\n                  'Content-Type': 'application/json',\r\n                  'Authorization': `Bearer ${jwtToken}`,\r\n                },\r\n                body: JSON.stringify({ text: message, username: user.username }),\r\n              });\r\n        \r\n              if (!response.ok) {\r\n                throw new Error('Failed to send message');\r\n              }\r\n        \r\n              setMessage('');\r\n              fetchMessages();\r\n            } catch (error) {\r\n              console.error('Error sending message:', error);\r\n            }\r\n          };\r\n        \r\n          return (\r\n            <div>\r\n              <div>\r\n                {chat.map((message, index) => (\r\n                  <div key={index}>\r\n                    <strong>{message.username}:</strong> {message.text}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n              <form onSubmit={sendMessage}>\r\n                <input\r\n                  type=\"text\"\r\n                  value={message}\r\n                  onChange={(e) => setMessage(e.target.value)}\r\n                />\r\n                <button type=\"submit\">Send</button>\r\n              </form>\r\n            </div>\r\n          );\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}