{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joona\\\\Desktop\\\\Advanced_project\\\\my-tinder\\\\src\\\\components\\\\Chat.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = ({\n  selectedChat,\n  jwtToken\n}) => {\n  _s();\n  const [chat, setChat] = useState([]);\n  useEffect(() => {\n    const fetchMessages = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/messages/${selectedChat._id}`, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${jwtToken}`\n          }\n        });\n        if (!response.ok) {\n          throw new Error('Failed to fetch messages');\n        }\n        const data = await response.json();\n        console.log(data);\n        setMessages(data);\n      } catch (error) {\n        console.error('Error fetching messages:', error);\n      }\n    };\n    fetchMessages();\n  }, [selectedChat, jwtToken]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(Chat, \"dldYjcUEWs/7UwnfdUK9EPeZ62E=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Chat","selectedChat","jwtToken","_s","chat","setChat","useEffect","fetchMessages","response","fetch","_id","method","headers","ok","Error","data","json","console","log","setMessages","error","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/joona/Desktop/Advanced_project/my-tinder/src/components/Chat.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst Chat = ({ selectedChat, jwtToken }) => {\r\n    const [chat, setChat] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchMessages = async () => {\r\n          try {\r\n            const response = await fetch(`http://localhost:5000/messages/${selectedChat._id}`, {\r\n              method: 'GET',\r\n              headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${jwtToken}`,\r\n              },\r\n            });\r\n    \r\n            if (!response.ok) {\r\n              throw new Error('Failed to fetch messages');\r\n            }\r\n    \r\n            const data = await response.json();\r\n            console.log(data);\r\n            setMessages(data);\r\n          } catch (error) {\r\n            console.error('Error fetching messages:', error);\r\n          }\r\n        };\r\n        fetchMessages();\r\n        }, [selectedChat, jwtToken]);\r\n\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,IAAI,GAAGA,CAAC;EAAEC,YAAY;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACzC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEpCS,SAAS,CAAC,MAAM;IACZ,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,kCAAiCR,YAAY,CAACS,GAAI,EAAC,EAAE;UACjFC,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACP,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAG,UAASV,QAAS;UACtC;QACF,CAAC,CAAC;QAEF,IAAI,CAACM,QAAQ,CAACK,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;QAC7C;QAEA,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;QAClCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;QACjBI,WAAW,CAACJ,IAAI,CAAC;MACnB,CAAC,CAAC,OAAOK,KAAK,EAAE;QACdH,OAAO,CAACG,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC;IACDb,aAAa,CAAC,CAAC;EACf,CAAC,EAAE,CAACN,YAAY,EAAEC,QAAQ,CAAC,CAAC;EAEhC,oBACIH,OAAA;IAAAsB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEK,CAAC;AAEd,CAAC;AAACrB,EAAA,CAjCIH,IAAI;AAAAyB,EAAA,GAAJzB,IAAI;AAmCV,eAAeA,IAAI;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}