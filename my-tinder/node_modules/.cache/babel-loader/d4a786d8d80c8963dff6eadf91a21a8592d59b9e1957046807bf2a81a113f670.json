{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joona\\\\Desktop\\\\Advanced_project\\\\my-tinder\\\\src\\\\pages\\\\Mainpage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport UserCard from '../components/UserCard';\nimport Menu from '../components/Menu';\nimport EditProfile from '../components/EditProfile';\nimport ChatView from './ChatView';\nimport { useNavigate } from 'react-router-dom';\nimport './MainPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainPage = ({\n  jwtToken,\n  user,\n  setUser,\n  setJwtToken,\n  isFetched,\n  setIsFetched\n}) => {\n  _s();\n  const [users, setUsers] = useState([]); // Fetch and set user data\n  const [currentUser, setCurrentUser] = useState(null); // Fetch and set current user data\n  const [showPopup, setShowPopup] = useState(false); // State to toggle popup visibility\n  const navigate = useNavigate();\n  const username = user.username;\n  const [viewOption, setViewOption] = useState('mainpage');\n\n  // Fetch users and current user data on component mount\n  useEffect(() => {\n    // Check if jwtToken exists, if not redirect to login page\n    if (!jwtToken) {\n      navigate('/login');\n      return;\n    }\n    fetchUserData();\n  }, [jwtToken, user.username]);\n  // Fetch all the other users who are not matched with logged in user.\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/users/all?username=${user.username}`, {\n          headers: {\n            Authorization: `Bearer ${jwtToken}`\n          }\n        });\n        if (response.ok) {\n          const data = await response.json();\n          // Filtering already matched users.\n          const filteredData = data.filter(obj => !obj.matches.includes(user.username));\n          setUsers(filteredData);\n          setCurrentUser(filteredData[0]);\n        } else {\n          console.error('Error fetching users:', response.statusText);\n        }\n      } catch (error) {\n        console.error('Error fetching users:', error);\n      }\n    };\n    fetchUsers();\n  }, [jwtToken, user.username]);\n\n  // Fetch user data based on username\n  const fetchUserData = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/users?username=${user.username}`, {\n        headers: {\n          Authorization: `Bearer ${jwtToken}`\n        }\n      });\n      if (response.ok) {\n        const userData = await response.json();\n        setUser(userData);\n      } else {\n        console.error('Failed to fetch user data');\n      }\n    } catch (error) {\n      console.error('Error fetching user data:', error);\n    }\n  };\n  // Handling the like and match cases.\n  const handleLike = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/users/like?liked=${currentUser.username}`, {\n        method: 'PUT',\n        headers: {\n          Authorization: `Bearer ${jwtToken}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        const boolean = data.isMatch;\n        // It was a match\n        if (boolean === true) {\n          const newUsers = users.slice(1);\n          console.log(\"MATCH\");\n          setUsers(newUsers);\n          setCurrentUser(newUsers[0]);\n        } else {\n          // Moving to next user\n          const newUsers = users.slice(1);\n          setUsers(newUsers);\n          setCurrentUser(newUsers[0]);\n        }\n      } else {\n        console.error('Error liking user:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Error liking user:', error);\n    }\n  };\n\n  // When user dislikes other user we just move to next user.\n  const handleDislike = async () => {\n    const newUsers = users.slice(1);\n    setUsers(newUsers);\n    setCurrentUser(newUsers[0]);\n  };\n\n  // Function to handle username click and toggle popup visibility\n  const handleUsernameClick = () => {\n    fetchUserData();\n    setShowPopup(!showPopup);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mainpageContainer\",\n    children: [viewOption === 'editprofile' && /*#__PURE__*/_jsxDEV(EditProfile, {\n      jwtToken: jwtToken,\n      user: user,\n      setViewOption: setViewOption\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }, this), viewOption === 'mainpage' && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'center'\n        },\n        onClick: handleUsernameClick,\n        children: [\"Welcome \", user.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this), showPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup show\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: user.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Bio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: user.bio\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Register date: \", user.registerDate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleUsernameClick,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          height: '100vh'\n        },\n        children: currentUser && /*#__PURE__*/_jsxDEV(UserCard, {\n          user: currentUser,\n          handleLike: handleLike,\n          handleDislike: handleDislike\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Menu, {\n        setJwtToken: setJwtToken,\n        setViewOption: setViewOption\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), viewOption === 'chats' && /*#__PURE__*/_jsxDEV(ChatView, {\n      setViewOption: setViewOption,\n      user: user,\n      jwtToken: jwtToken\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n};\n_s(MainPage, \"klq806tktgzZnosNeeEk82HUL8w=\", false, function () {\n  return [useNavigate];\n});\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useState","useEffect","UserCard","Menu","EditProfile","ChatView","useNavigate","jsxDEV","_jsxDEV","MainPage","jwtToken","user","setUser","setJwtToken","isFetched","setIsFetched","_s","users","setUsers","currentUser","setCurrentUser","showPopup","setShowPopup","navigate","username","viewOption","setViewOption","fetchUserData","fetchUsers","response","fetch","headers","Authorization","ok","data","json","filteredData","filter","obj","matches","includes","console","error","statusText","userData","handleLike","method","body","JSON","stringify","boolean","isMatch","newUsers","slice","log","handleDislike","handleUsernameClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","justifyContent","onClick","name","bio","registerDate","alignItems","height","_c","$RefreshReg$"],"sources":["C:/Users/joona/Desktop/Advanced_project/my-tinder/src/pages/Mainpage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport UserCard from '../components/UserCard';\r\nimport Menu from '../components/Menu';\r\nimport EditProfile from '../components/EditProfile';\r\nimport ChatView from './ChatView';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './MainPage.css'\r\n\r\n\r\nconst MainPage = ({ jwtToken, user, setUser, setJwtToken, isFetched, setIsFetched}) => {\r\n  const [users, setUsers] = useState([]); // Fetch and set user data\r\n  const [currentUser, setCurrentUser] = useState(null); // Fetch and set current user data\r\n  const [showPopup, setShowPopup] = useState(false); // State to toggle popup visibility\r\n  const navigate = useNavigate();\r\n  const username = user.username\r\n  const [viewOption, setViewOption] = useState('mainpage');\r\n\r\n    // Fetch users and current user data on component mount\r\n    useEffect(() => {\r\n      // Check if jwtToken exists, if not redirect to login page\r\n      if (!jwtToken) {\r\n        navigate('/login');\r\n        return;\r\n      }\r\n      fetchUserData();\r\n      \r\n    }, [jwtToken, user.username]);\r\n    // Fetch all the other users who are not matched with logged in user.\r\n    useEffect(() => {\r\n\r\n      const fetchUsers = async () => {\r\n\r\n        try {\r\n          const response = await fetch(`http://localhost:5000/users/all?username=${user.username}`, {\r\n            headers: {\r\n              Authorization: `Bearer ${jwtToken}`,\r\n            },\r\n          });\r\n\r\n          if (response.ok) {\r\n            const data = await response.json();\r\n            // Filtering already matched users.\r\n            const filteredData = data.filter(obj => !obj.matches.includes(user.username));\r\n            setUsers(filteredData);\r\n            setCurrentUser(filteredData[0]);\r\n          } else {\r\n            console.error('Error fetching users:', response.statusText);\r\n          }\r\n        } catch (error) {\r\n          console.error('Error fetching users:', error);\r\n        }\r\n      };\r\n\r\n      fetchUsers();\r\n\r\n    }, [jwtToken, user.username]);\r\n\r\n    // Fetch user data based on username\r\n    const fetchUserData = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:5000/users?username=${user.username}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${jwtToken}`,\r\n          },\r\n        });\r\n        if (response.ok) {\r\n          const userData = await response.json();\r\n          setUser(userData)\r\n        } else {\r\n          console.error('Failed to fetch user data');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching user data:', error);\r\n      }\r\n    };\r\n    // Handling the like and match cases.\r\n    const handleLike = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:5000/users/like?liked=${currentUser.username}`, {\r\n          method: 'PUT',\r\n          headers: {\r\n            Authorization: `Bearer ${jwtToken}`,\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({ username })\r\n        });\r\n    \r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          const boolean = data.isMatch\r\n          // It was a match\r\n          if (boolean === true) {\r\n            const newUsers = users.slice(1);\r\n            console.log(\"MATCH\");\r\n            setUsers(newUsers);\r\n            setCurrentUser(newUsers[0]);\r\n          } else { // Moving to next user\r\n            const newUsers = users.slice(1);\r\n            setUsers(newUsers);\r\n            setCurrentUser(newUsers[0]);\r\n          }\r\n\r\n        } else {\r\n          console.error('Error liking user:', response.statusText);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error liking user:', error);\r\n      }\r\n\r\n\r\n    };\r\n\r\n    // When user dislikes other user we just move to next user.\r\n    const handleDislike = async () => {\r\n      const newUsers = users.slice(1);\r\n      setUsers(newUsers);\r\n      setCurrentUser(newUsers[0]);\r\n\r\n    };\r\n\r\n\r\n    // Function to handle username click and toggle popup visibility\r\n    const handleUsernameClick = () => {\r\n      fetchUserData();\r\n      setShowPopup(!showPopup);\r\n    };\r\n\r\n  return (\r\n    <div className='mainpageContainer'>\r\n\r\n    {viewOption === 'editprofile' && (\r\n        <EditProfile jwtToken={jwtToken} user={user} setViewOption={setViewOption}/>\r\n    )}\r\n    {viewOption === 'mainpage' && (\r\n      <div>\r\n          <h1 style={{ display: 'flex', justifyContent: 'center'}}onClick={handleUsernameClick}>Welcome {user.username}</h1>\r\n          {showPopup && (\r\n            <div className=\"popup show\">\r\n              <h2>{user.name}</h2>\r\n              <h3>Bio</h3>\r\n              <p>{user.bio}</p>\r\n              <p>Register date: {user.registerDate}</p>\r\n              <button onClick={handleUsernameClick}>Close</button>\r\n            </div>\r\n          )}\r\n          <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100vh' }}>\r\n            {currentUser && <UserCard user={currentUser} handleLike={handleLike} handleDislike={handleDislike}/>}\r\n          </div>\r\n          <Menu setJwtToken={ setJwtToken } setViewOption={setViewOption}/>\r\n      </div>\r\n    )}\r\n    {viewOption === 'chats' && (\r\n      <ChatView setViewOption={setViewOption} user={user} jwtToken={jwtToken}/>\r\n    )}\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default MainPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}