{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joona\\\\Desktop\\\\Advanced_project\\\\my-tinder\\\\src\\\\components\\\\Chat.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = ({\n  selectedChat,\n  jwtToken,\n  user\n}) => {\n  _s();\n  const [chat, setChat] = useState([]);\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    fetchMessages();\n  }, [selectedChat, jwtToken]);\n  const fetchMessages = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/messages/chat/?id=${selectedChat}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${jwtToken}`\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Failed to fetch messages');\n      }\n      const data = await response.json();\n      console.log(data, \"kek\");\n      setChat(data);\n    } catch (error) {\n      console.error('Error fetching messages:', error);\n    }\n  };\n  const sendMessage = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch(`http://localhost:5000/messages/send?id=${selectedChat}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${jwtToken}`\n        },\n        body: JSON.stringify({\n          text: message,\n          username: user.username\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to send message');\n      }\n      const data = await response.json();\n      console.log(data);\n      setMessage('');\n      fetchMessages();\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: chat.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [message.username, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), \" \", message.text]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendMessage,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: message,\n        onChange: e => setMessage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"bPw8wqfwBEJKG3ieJInT4/I02YQ=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Chat","selectedChat","jwtToken","user","_s","chat","setChat","message","setMessage","fetchMessages","response","fetch","method","headers","ok","Error","data","json","console","log","error","sendMessage","e","preventDefault","body","JSON","stringify","text","username","children","map","index","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/joona/Desktop/Advanced_project/my-tinder/src/components/Chat.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst Chat = ({ selectedChat, jwtToken, user }) => {\r\n    const [chat, setChat] = useState([]);\r\n    const [message, setMessage] = useState('');\r\n\r\n    useEffect(() => {\r\n        fetchMessages();\r\n        }, [selectedChat, jwtToken]);\r\n\r\n    const fetchMessages = async () => {\r\n        try {\r\n            const response = await fetch(`http://localhost:5000/messages/chat/?id=${selectedChat}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${jwtToken}`,\r\n            },\r\n            });\r\n    \r\n            if (!response.ok) {\r\n            throw new Error('Failed to fetch messages');\r\n            }\r\n    \r\n            const data = await response.json();\r\n            console.log(data, \"kek\");\r\n            setChat(data);\r\n        } catch (error) {\r\n            console.error('Error fetching messages:', error);\r\n        }\r\n        };\r\n        \r\n    const sendMessage = async (e) => {\r\n        e.preventDefault();\r\n    \r\n        try {\r\n            const response = await fetch(`http://localhost:5000/messages/send?id=${selectedChat}`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${jwtToken}`,\r\n            },\r\n            body: JSON.stringify({ text: message, username: user.username }),\r\n            });\r\n    \r\n            if (!response.ok) {\r\n            throw new Error('Failed to send message');\r\n            }\r\n            const data = await response.json();\r\n            console.log(data);\r\n            setMessage('');\r\n            fetchMessages();\r\n        } catch (error) {\r\n            console.error('Error sending message:', error);\r\n        }\r\n        };\r\n    \r\n    return (\r\n    <div>\r\n        <div>\r\n        {chat.map((message, index) => (\r\n            <div key={index}>\r\n            <strong>{message.username}:</strong> {message.text}\r\n            </div>\r\n        ))}\r\n        </div>\r\n        <form onSubmit={sendMessage}>\r\n        <input\r\n            type=\"text\"\r\n            value={message}\r\n            onChange={(e) => setMessage(e.target.value)}\r\n        />\r\n        <button type=\"submit\">Send</button>\r\n        </form>\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,IAAI,GAAGA,CAAC;EAAEC,YAAY;EAAEC,QAAQ;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAC/C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACZY,aAAa,CAAC,CAAC;EACf,CAAC,EAAE,CAACR,YAAY,EAAEC,QAAQ,CAAC,CAAC;EAEhC,MAAMO,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,2CAA0CV,YAAa,EAAC,EAAE;QACxFW,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACL,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAG,UAASX,QAAS;QACxC;MACA,CAAC,CAAC;MAEF,IAAI,CAACQ,QAAQ,CAACI,EAAE,EAAE;QAClB,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;MAC3C;MAEA,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;MAClCC,OAAO,CAACC,GAAG,CAACH,IAAI,EAAE,KAAK,CAAC;MACxBV,OAAO,CAACU,IAAI,CAAC;IACjB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACZF,OAAO,CAACE,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IACpD;EACA,CAAC;EAEL,MAAMC,WAAW,GAAG,MAAOC,CAAC,IAAK;IAC7BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI;MACA,MAAMb,QAAQ,GAAG,MAAMC,KAAK,CAAE,0CAAyCV,YAAa,EAAC,EAAE;QACvFW,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAG,UAASX,QAAS;QACxC,CAAC;QACDsB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,IAAI,EAAEpB,OAAO;UAAEqB,QAAQ,EAAEzB,IAAI,CAACyB;QAAS,CAAC;MAC/D,CAAC,CAAC;MAEF,IAAI,CAAClB,QAAQ,CAACI,EAAE,EAAE;QAClB,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;MACzC;MACA,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;MAClCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;MACjBR,UAAU,CAAC,EAAE,CAAC;MACdC,aAAa,CAAC,CAAC;IACnB,CAAC,CAAC,OAAOW,KAAK,EAAE;MACZF,OAAO,CAACE,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAClD;EACA,CAAC;EAEL,oBACArB,OAAA;IAAA8B,QAAA,gBACI9B,OAAA;MAAA8B,QAAA,EACCxB,IAAI,CAACyB,GAAG,CAAC,CAACvB,OAAO,EAAEwB,KAAK,kBACrBhC,OAAA;QAAA8B,QAAA,gBACA9B,OAAA;UAAA8B,QAAA,GAAStB,OAAO,CAACqB,QAAQ,EAAC,GAAC;QAAA;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAAC5B,OAAO,CAACoB,IAAI;MAAA,GADxCI,KAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC,eACNpC,OAAA;MAAMqC,QAAQ,EAAEf,WAAY;MAAAQ,QAAA,gBAC5B9B,OAAA;QACIsC,IAAI,EAAC,MAAM;QACXC,KAAK,EAAE/B,OAAQ;QACfgC,QAAQ,EAAGjB,CAAC,IAAKd,UAAU,CAACc,CAAC,CAACkB,MAAM,CAACF,KAAK;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/C,CAAC,eACFpC,OAAA;QAAQsC,IAAI,EAAC,QAAQ;QAAAR,QAAA,EAAC;MAAI;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAAC/B,EAAA,CA1EIJ,IAAI;AAAAyC,EAAA,GAAJzC,IAAI;AA4EV,eAAeA,IAAI;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}