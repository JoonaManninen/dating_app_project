{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joona\\\\Desktop\\\\Advanced_project\\\\my-tinder\\\\src\\\\pages\\\\Mainpage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport UserCard from '../components/UserCard';\nimport Menu from '../components/Menu';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MainPage = ({\n  jwtToken,\n  user\n}) => {\n  _s();\n  const [users, setUsers] = useState([]); // Fetch and set user data\n  const [currentUser, setCurrentUser] = useState(null); // Fetch and set current user data\n  const navigate = useNavigate();\n\n  // Fetch users and current user data on component mount\n  useEffect(() => {\n    // Fetch users and current user data here\n    // Update state using setUsers and setCurrentUser\n  }, []);\n\n  // Function to handle like/dislike actions\n  const handleLikeDislike = (userId, action) => {\n    // Implement like/dislike logic here\n  };\n  useEffect(() => {\n    // Check if jwtToken exists, if not redirect to login page\n    if (!jwtToken) {\n      navigate('/login');\n    }\n  }, [jwtToken, navigate]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [users.map(user => /*#__PURE__*/_jsxDEV(UserCard, {\n      user: user,\n      onLike: () => handleLikeDislike(user.id, 'like'),\n      onDislike: () => handleLikeDislike(user.id, 'dislike')\n    }, user.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(MainPage, \"9swM0sPsuQcLc2Lg2FqUXzmgX5o=\", false, function () {\n  return [useNavigate];\n});\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useState","useEffect","UserCard","Menu","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","MainPage","jwtToken","user","_s","users","setUsers","currentUser","setCurrentUser","navigate","handleLikeDislike","userId","action","children","map","onLike","id","onDislike","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/joona/Desktop/Advanced_project/my-tinder/src/pages/Mainpage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport UserCard from '../components/UserCard';\r\nimport Menu from '../components/Menu';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst MainPage = ({ jwtToken, user }) => {\r\n  const [users, setUsers] = useState([]); // Fetch and set user data\r\n  const [currentUser, setCurrentUser] = useState(null); // Fetch and set current user data\r\n  const navigate = useNavigate();\r\n\r\n  // Fetch users and current user data on component mount\r\n  useEffect(() => {\r\n    // Fetch users and current user data here\r\n    // Update state using setUsers and setCurrentUser\r\n  }, []);\r\n\r\n  // Function to handle like/dislike actions\r\n  const handleLikeDislike = (userId, action) => {\r\n    // Implement like/dislike logic here\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Check if jwtToken exists, if not redirect to login page\r\n    if (!jwtToken) {\r\n      navigate('/login');\r\n    }\r\n  }, [jwtToken, navigate]);\r\n\r\n  return (\r\n    <>\r\n      {users.map((user) => (\r\n        <UserCard\r\n          key={user.id}\r\n          user={user}\r\n          onLike={() => handleLikeDislike(user.id, 'like')}\r\n          onDislike={() => handleLikeDislike(user.id, 'dislike')}\r\n        />\r\n      ))}\r\n      <Menu />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,IAAI,MAAM,oBAAoB;AACrC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE/C,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EACvC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACxC,MAAM,CAACe,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EACtD,MAAMiB,QAAQ,GAAGb,WAAW,CAAC,CAAC;;EAE9B;EACAH,SAAS,CAAC,MAAM;IACd;IACA;EAAA,CACD,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMiB,iBAAiB,GAAGA,CAACC,MAAM,EAAEC,MAAM,KAAK;IAC5C;EAAA,CACD;EAEDnB,SAAS,CAAC,MAAM;IACd;IACA,IAAI,CAACS,QAAQ,EAAE;MACbO,QAAQ,CAAC,QAAQ,CAAC;IACpB;EACF,CAAC,EAAE,CAACP,QAAQ,EAAEO,QAAQ,CAAC,CAAC;EAExB,oBACEX,OAAA,CAAAE,SAAA;IAAAa,QAAA,GACGR,KAAK,CAACS,GAAG,CAAEX,IAAI,iBACdL,OAAA,CAACJ,QAAQ;MAEPS,IAAI,EAAEA,IAAK;MACXY,MAAM,EAAEA,CAAA,KAAML,iBAAiB,CAACP,IAAI,CAACa,EAAE,EAAE,MAAM,CAAE;MACjDC,SAAS,EAAEA,CAAA,KAAMP,iBAAiB,CAACP,IAAI,CAACa,EAAE,EAAE,SAAS;IAAE,GAHlDb,IAAI,CAACa,EAAE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIb,CACF,CAAC,eACFvB,OAAA,CAACH,IAAI;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACR,CAAC;AAEP,CAAC;AAACjB,EAAA,CApCIH,QAAQ;EAAA,QAGKL,WAAW;AAAA;AAAA0B,EAAA,GAHxBrB,QAAQ;AAsCd,eAAeA,QAAQ;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}