{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joona\\\\Desktop\\\\Advanced_project\\\\my-tinder\\\\src\\\\components\\\\Chat.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './Chat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = ({\n  selectedChat,\n  jwtToken,\n  user\n}) => {\n  _s();\n  const [chat, setChat] = useState([]);\n  const [message, setMessage] = useState('');\n  const chatMessagesRef = useRef(null);\n  useEffect(() => {\n    fetchMessages();\n  }, [selectedChat, jwtToken]);\n  useEffect(() => {\n    scrollToBottom();\n  }, [chat]);\n  const fetchMessages = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/messages/chat/?id=${selectedChat}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${jwtToken}`\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Failed to fetch messages');\n      }\n      const data = await response.json();\n      console.log(data, \"kek\");\n      setChat(data);\n    } catch (error) {\n      console.error('Error fetching messages:', error);\n    }\n  };\n  const sendMessage = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch(`http://localhost:5000/messages/send/?id=${selectedChat}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${jwtToken}`\n        },\n        body: JSON.stringify({\n          text: message,\n          username: user.username\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to send message');\n      }\n      const data = await response.json();\n      console.log(data);\n      setMessage('');\n      fetchMessages();\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n  };\n  const scrollToBottom = () => {\n    if (chatMessagesRef.current) {\n      chatMessagesRef.current.scrollTop = chatMessagesRef.current.scrollHeight;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      ref: chatMessagesRef,\n      children: chat.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: message.senderId === user.username ? 'user-bubble chat-bubble' : 'other-bubble chat-bubble',\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-text\",\n          children: message.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-time\",\n          children: message.timestamp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"message-form\",\n      onSubmit: sendMessage,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: message,\n        onChange: e => setMessage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"WtzEp1TEXzzD7fYeCsnW/UsL9Jk=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Chat","selectedChat","jwtToken","user","_s","chat","setChat","message","setMessage","chatMessagesRef","fetchMessages","scrollToBottom","response","fetch","method","headers","ok","Error","data","json","console","log","error","sendMessage","e","preventDefault","body","JSON","stringify","text","username","current","scrollTop","scrollHeight","className","children","ref","map","index","senderId","content","fileName","_jsxFileName","lineNumber","columnNumber","timestamp","onSubmit","type","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/joona/Desktop/Advanced_project/my-tinder/src/components/Chat.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport './Chat.css';\r\n\r\nconst Chat = ({ selectedChat, jwtToken, user }) => {\r\n  const [chat, setChat] = useState([]);\r\n  const [message, setMessage] = useState('');\r\n  const chatMessagesRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    fetchMessages();\r\n  }, [selectedChat, jwtToken]);\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [chat]);\r\n\r\n  const fetchMessages = async () => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/messages/chat/?id=${selectedChat}`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${jwtToken}`,\r\n        },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch messages');\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log(data, \"kek\");\r\n      setChat(data);\r\n    } catch (error) {\r\n      console.error('Error fetching messages:', error);\r\n    }\r\n  };\r\n\r\n  const sendMessage = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/messages/send/?id=${selectedChat}`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${jwtToken}`,\r\n        },\r\n        body: JSON.stringify({ text: message, username: user.username }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to send message');\r\n      }\r\n      const data = await response.json();\r\n      console.log(data);\r\n      setMessage('');\r\n      fetchMessages();\r\n    } catch (error) {\r\n      console.error('Error sending message:', error);\r\n    }\r\n  };\r\n\r\n  const scrollToBottom = () => {\r\n    if (chatMessagesRef.current) {\r\n      chatMessagesRef.current.scrollTop = chatMessagesRef.current.scrollHeight;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <div className=\"chat-messages\" ref={chatMessagesRef}>\r\n        {chat.map((message, index) => (\r\n          <div key={index} className={message.senderId === user.username ? 'user-bubble chat-bubble' : 'other-bubble chat-bubble'}>\r\n            <div className=\"message-text\">{message.content}</div>\r\n            <div className=\"message-time\">{message.timestamp}</div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <form className=\"message-form\" onSubmit={sendMessage}>\r\n        <input\r\n          type=\"text\"\r\n          value={message}\r\n          onChange={(e) => setMessage(e.target.value)}\r\n        />\r\n        <button type=\"submit\">Send</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}